class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        // O(n+k), O(n);
        //  unordered_map<int, int> mp;
        // O(n), O(n);
        // vector<int> mp(nums.size() + 1, 0);
        int n = nums.size();
        for (int i = 0; i < n; i++)
            while (nums[i] > 0 && nums[i] <= n &&
                   nums[nums[i] - 1] != nums[i]) {
                swap(nums[i], nums[nums[i] - 1]);
            }
        for (int i = 0; i < n; i++) {
            if (nums[i] != i + 1) {
                return i + 1;
            }
        }
        return n + 1;
    }
};
