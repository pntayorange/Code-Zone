class Solution {
public:
    vector<int> twoOutOfThree(vector<int>& num1, vector<int>& num2,
                              vector<int>& num3) {
        unordered_map<int, int> mp;
        unordered_set<int> nums1(num1.begin(), num1.end());
        unordered_set<int> nums2(num2.begin(), num2.end());
        unordered_set<int> nums3(num3.begin(), num3.end());
        for (int i : nums1) {
            mp[i] = 1;
        }
        for (int i : nums2) {
            if (mp[i] == 1)
                mp[i] = 2;
            else
                mp[i] = 1;
        }
        for (int i : nums3) {
            if (mp[i] == 2)
                mp[i] = 3;
            else if (mp[i] == 1)
                mp[i] = 2;
            // else
            // mp[i] = 1;
        }
        vector<int> res;
        for (const auto& i : mp) {
            // cout << i.first << " " << i.second << endl;
            if (i.second >= 2)
                res.push_back(i.first);
        }
        return res;
    }
};
